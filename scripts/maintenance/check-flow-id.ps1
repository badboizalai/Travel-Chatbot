#!/usr/bin/env pwsh
# Script ƒë·ªÉ ki·ªÉm tra Flow ID hi·ªán t·∫°i trong h·ªá th·ªëng

Write-Host "üîç ƒêang ki·ªÉm tra Flow ID hi·ªán t·∫°i..." -ForegroundColor Cyan

# Ki·ªÉm tra Flow ID t·ª´ backend
Write-Host "`nüì° Flow ID t·ª´ Backend API:" -ForegroundColor Yellow
try {
    $backendResponse = Invoke-RestMethod -Uri "http://localhost:8000/api/chatbot/flow-id" -Method GET
    Write-Host "   Flow ID: $($backendResponse.flow_id)" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi backend: $($_.Exception.Message)" -ForegroundColor Red
}

# Ki·ªÉm tra Flow ID t·ª´ file persistent
Write-Host "`nüìÇ Flow ID t·ª´ file persistent:" -ForegroundColor Yellow
$flowIdFile = "data/flow_id.txt"
if (Test-Path $flowIdFile) {
    $storedFlowId = Get-Content $flowIdFile -Raw
    Write-Host "   Flow ID: $($storedFlowId.Trim())" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è File flow_id.txt kh√¥ng t·ªìn t·∫°i" -ForegroundColor Yellow
}

# Ki·ªÉm tra Flow ID t·ª´ Docker volume
Write-Host "`nüê≥ Flow ID t·ª´ Docker volume:" -ForegroundColor Yellow
try {
    $dockerFlowId = docker exec travel_backend cat /app/data/flow_id.txt 2>$null
    if ($dockerFlowId) {
        Write-Host "   Flow ID: $($dockerFlowId.Trim())" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y flow ID trong Docker volume" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ùå Kh√¥ng th·ªÉ truy c·∫≠p Docker container" -ForegroundColor Red
}

# Ki·ªÉm tra Langflow flows
Write-Host "`nüåä Flows trong Langflow:" -ForegroundColor Yellow
try {
    $langflowFlows = Invoke-RestMethod -Uri "http://localhost:8080/api/v1/flows/" -Method GET
    if ($langflowFlows.Count -gt 0) {
        foreach ($flow in $langflowFlows) {
            $status = if ($flow.name -eq "Travel Chatbot") { "‚úÖ" } else { "  " }
            Write-Host "   $status $($flow.name) - ID: $($flow.id)" -ForegroundColor White
        }
    } else {
        Write-Host "   ‚ö†Ô∏è Kh√¥ng c√≥ flows n√†o trong Langflow" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi Langflow: $($_.Exception.Message)" -ForegroundColor Red
}

# Ki·ªÉm tra Frontend langflowApi.ts
Write-Host "`nüé® Flow ID trong Frontend:" -ForegroundColor Yellow
$langflowApiFile = "frontend/src/services/langflowApi.ts"
if (Test-Path $langflowApiFile) {
    $content = Get-Content $langflowApiFile -Raw
    if ($content -match "this\.flowId = '([^']+)'") {
        Write-Host "   Flow ID: $($matches[1])" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y flow ID pattern" -ForegroundColor Yellow
    }
} else {
    Write-Host "   ‚ùå File langflowApi.ts kh√¥ng t·ªìn t·∫°i" -ForegroundColor Red
}

Write-Host "`n‚úÖ Ki·ªÉm tra ho√†n t·∫•t!" -ForegroundColor Cyan
