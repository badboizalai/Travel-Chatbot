import React, { useState } from 'react';

interface PricingPlan {
  name: string;
  price: number;
  originalPrice?: number;
  duration: string;
  description: string;
  features: string[];
  popular?: boolean;
  color: string;
  icon: any;
}

const PricingPage = () => {
  const [selectedPlan, setSelectedPlan] = useState<string>('');
  
  const formatPrice = (amount: number): string => {
    return `${amount.toLocaleString('vi-VN')}‚Ç´`;
  };

  const handleSelectPlan = (planName: string) => {
    setSelectedPlan(planName);
    alert(`ƒê√£ ch·ªçn g√≥i ${planName}. T√≠nh nƒÉng thanh to√°n s·∫Ω ƒë∆∞·ª£c th√™m sau.`);
  };

  const plans: PricingPlan[] = [
    {
      name: 'Basic',
      price: 0,
      duration: 'Mi·ªÖn ph√≠',
      description: 'Tr·∫£i nghi·ªám c∆° b·∫£n v·ªõi TravelMate AI',
      features: [
        '10 c√¢u h·ªèi m·ªói ng√†y',
        'Th√¥ng tin du l·ªãch c∆° b·∫£n',
        'G·ª£i √Ω ƒë·ªãa ƒëi·ªÉm ph·ªï bi·∫øn',
        'H·ªó tr·ª£ ti·∫øng Vi·ªát',
        'Th·ªùi gian ph·∫£n h·ªìi: 5-10 gi√¢y'
      ],
      color: 'from-gray-400 to-gray-600',
      icon: <span className="text-2xl">üåê</span>
    },
    {
      name: 'Pro',
      price: 299000,
      originalPrice: 599000,
      duration: '/th√°ng',
      description: 'Tr·∫£i nghi·ªám AI th√¥ng minh nh·∫•t cho du l·ªãch',
      features: [
        'Kh√¥ng gi·ªõi h·∫°n c√¢u h·ªèi',
        'AI th√¥ng minh v·ªõi GPT-4 & Claude',
        'L·∫≠p k·∫ø ho·∫°ch chi ti·∫øt t·ª´ng ng√†y',
        'T√¨m ki·∫øm ch·ªó ·ªü, v√© m√°y bay',
        'B·∫£n ƒë·ªì t∆∞∆°ng t√°c v·ªõi GPS',
        'Th√¥ng tin th·ªùi ti·∫øt th·ªùi gian th·ª±c',
        'G·ª£i √Ω ·∫©m th·ª±c ƒë·∫∑c bi·ªát',
        'H·ªó tr·ª£ ƒëa ng√¥n ng·ªØ',
        'Th·ªùi gian ph·∫£n h·ªìi: 1-2 gi√¢y',
        '∆Øu ti√™n h·ªó tr·ª£ 24/7'
      ],
      popular: true,
      color: 'from-pink-500 to-purple-600',
      icon: <span className="w-6 h-6">üëë</span>    },
    {
      name: 'Enterprise',
      price: 999000,
      duration: '/th√°ng',
      description: 'Gi·∫£i ph√°p to√†n di·ªán cho doanh nghi·ªáp',
      features: [
        'T·∫•t c·∫£ t√≠nh nƒÉng Pro',
        'API ri√™ng bi·ªát',
        'T√πy ch·ªânh th∆∞∆°ng hi·ªáu',
        'B√°o c√°o ph√¢n t√≠ch chi ti·∫øt',
        'T√≠ch h·ª£p h·ªá th·ªëng ri√™ng',
        'H·ªó tr·ª£ k·ªπ thu·∫≠t ∆∞u ti√™n',
        'Training AI theo y√™u c·∫ßu',
        'SLA 99.9% uptime',
        'Dedicated support team'
      ],
      color: 'from-purple-600 to-indigo-600',
      icon: <span className="w-6 h-6">üõ°Ô∏è</span>
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 py-12">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h1 className="text-4xl md:text-6xl font-bold text-gray-900 mb-6">
            Ch·ªçn g√≥i <span className="bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">ph√π h·ª£p</span> v·ªõi b·∫°n
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto mb-8">
            T·ª´ kh√°m ph√° c∆° b·∫£n ƒë·∫øn AI chuy√™n s√¢u, ch√∫ng t√¥i c√≥ g√≥i d·ªãch v·ª• ho√†n h·∫£o cho m·ªçi nhu c·∫ßu du l·ªãch c·ªßa b·∫°n.
          </p>
          
          <div className="flex flex-wrap justify-center gap-6 text-gray-700">
            <div className="flex items-center space-x-2">
              <span className="w-5 h-5 text-green-500">‚ú®</span>
              <span>AI th√¥ng minh</span>
            </div>
            <div className="flex items-center space-x-2">
              <span className="w-5 h-5 text-blue-500">üí¨</span>
              <span>T∆∞ v·∫•n 24/7</span>
            </div>
            <div className="flex items-center space-x-2">
              <span className="w-5 h-5 text-purple-500">üëë</span>
              <span>Tr·∫£i nghi·ªám cao c·∫•p</span>
            </div>
            <div className="flex items-center space-x-2">
              <span className="w-5 h-5 text-red-500">üìç</span>
              <span>B·∫£n ƒë·ªì t∆∞∆°ng t√°c</span>
            </div>
            <div className="flex items-center space-x-2">
              <span className="w-5 h-5 text-yellow-500">‚ö°</span>
              <span>Ph·∫£n h·ªìi nhanh</span>
            </div>
            <div className="flex items-center space-x-2">
              <span className="w-5 h-5 text-indigo-500">üåê</span>
              <span>ƒêa ng√¥n ng·ªØ</span>
            </div>
          </div>
        </div>

        <div className="grid md:grid-cols-3 gap-8 mb-12">
          {plans.map((plan, index) => (
            <div
              key={plan.name}
              className={`relative rounded-2xl p-8 ${
                plan.popular 
                  ? 'bg-gradient-to-br from-white to-purple-50 border-2 border-purple-300 shadow-2xl transform scale-105' 
                  : 'bg-white border border-gray-200 shadow-lg hover:shadow-xl transition-shadow'
              }`}
            >
              {plan.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <span className="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-4 py-2 rounded-full text-sm font-semibold">
                    üî• Ph·ªï bi·∫øn nh·∫•t
                  </span>
                </div>
              )}

              <div className="text-center mb-8">
                <div className={`inline-flex p-3 rounded-full bg-gradient-to-r ${plan.color} mb-4`}>
                  <span className="text-white text-2xl">{plan.icon}</span>
                </div>
                <h3 className="text-2xl font-bold text-gray-900 mb-2">{plan.name}</h3>
                <p className="text-gray-600 mb-4">{plan.description}</p>
                
                <div className="mb-6">                  {plan.originalPrice && (
                    <span className="text-lg text-gray-400 line-through block">
                      {formatPrice(plan.originalPrice)}{plan.duration}
                    </span>
                  )}
                  <div className="flex items-baseline justify-center">
                    <span className="text-4xl font-bold text-gray-900">
                      {plan.price === 0 ? 'Mi·ªÖn ph√≠' : formatPrice(plan.price)}
                    </span>
                    {plan.price > 0 && (
                      <span className="text-gray-600 ml-1">{plan.duration}</span>
                    )}
                  </div>
                </div>
              </div>

              <ul className="space-y-4 mb-8">
                {plan.features.map((feature, featureIndex) => (
                  <li key={featureIndex} className="flex items-start">
                    <span className="text-green-500 mr-3 mt-1">‚úì</span>
                    <span className="text-gray-700">{feature}</span>
                  </li>
                ))}
              </ul>

              <button
                onClick={() => handleSelectPlan(plan.name)}
                className={`w-full py-4 px-6 rounded-xl font-semibold transition-all ${
                  plan.popular
                    ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:shadow-lg transform hover:-translate-y-1'
                    : 'border-2 border-gray-300 text-gray-700 hover:border-purple-500 hover:text-purple-600'
                }`}
              >
                {plan.name === 'Basic' ? 'B·∫Øt ƒë·∫ßu mi·ªÖn ph√≠' : `Ch·ªçn g√≥i ${plan.name}`}
              </button>
            </div>
          ))}
        </div>        <div className="text-center text-gray-600">
          <p className="mb-4">‚ú® T·∫•t c·∫£ g√≥i ƒë·ªÅu bao g·ªìm b·∫£o m·∫≠t SSL v√† sao l∆∞u d·ªØ li·ªáu</p>
          <p className="mb-4">üîÑ C√≥ th·ªÉ thay ƒë·ªïi ho·∫∑c h·ªßy g√≥i b·∫•t c·ª© l√∫c n√†o</p>
          <p>üìû H·ªó tr·ª£ kh√°ch h√†ng 24/7 qua chat, email v√† ƒëi·ªán tho·∫°i</p>
        </div>
      </div>
    </div>
  );
};

export default PricingPage;
